information:

  name: github
  background: dark
  author: "freestingo <nicolo.traini@oncode.it>"

palette:
  fg: "#D1D5DA"
  bg: "#1B1C22"

  red: "#D16969"
  error_red: "#F44747"
  green: "#608B4E"
  light_green: "#B5CEA8"
  yellow: "#DCDCAA"
  dark_yellow: "#D7BA7D"
  orange: "#CE9178"
  grey_blue: "#729CB3"
  blue: "#569CD6"
  light_blue: "#9CDCFE"
  vivid_blue: "#4FC1FF"
  purple: "#C586C0"
  cyan: "#4EC9B0"
  white: "#ABB2BF"
  black: "#1E1E1E"
  line_grey: "#5C6370"
  gutter_fg_grey: "#858585"
  cursor_grey: "#2C323C"
  visual_grey: "#3E4452"
  menu_grey: "#282C34"
  special_grey: "#3B4048"
  vertsplit: "#3E4452"
  warning_orange: "#ff8800"
  info_yellow: "#FFCC66"
  search_blue: "#1da1f2"
  git_green: "#81B88B"
  symlink: "#29B8D8"
  executable: "#23D18B"
  tabfill: "#252526"
  bg_inactive: "#2E2E2E"
  cursor_fg_old: "#515052"
  cursor_bg_old: "#AEAFAD"
  indentlinehighlight: "#707070"
  comment: "#959DA5"
  text: "#D1D5DA"
  constant: "#79B8FF"
  number: "#79B8FF"
  identifier: "#79B8FF"
  variable: "#79B8FF"
  todo: "#79B8FF"
  string: "#9ECBFF"
  string_escape: "#B3D6FF"
  regex: "#9ECBFF"
  keyword: "#F97583"
  boolean: "#F97583"
  operator: "#F97583"
  annotation: "#E8848F"
  attribute: "#FFAB70"
  parameter: "#FFAB70"
  function: "#B392F0"
  class: "#B392F0"
  cursor_fg: "#515052"
  cursor_bg: "#AEAFAD"
  line_nr: "#444D56"
  cursor_line_nr: "#E1E4E8"
  color_column: "#262B30"
  sign_column: "#262B30"
  vert_split: "#2F363D"
  indent_line: "#2F363D"
  caret_row: "#202129"
  html_tag: "#67F07B"
  special_text: "#A9BAD1"

highlights:
  Normal: "fg bg"

  Comment: "comment - i"
  Constant: "constant"
  String: "string"
  Character: "string"
  Number: "number"
  Boolean: "boolean"
  Float: "number"
  Identifier: "identifier"
  Function: "function"
  Statement: "keyword"
  Conditional: "keyword"
  Repeat: "keyword"
  Label: "keyword"
  Operator: "operator"
  Keyword: "keyword"
  Exception: "keyword"
  PreProc: "keyword"
  Include: "keyword"
  Define: "keyword"
  Title: "keyword"
  Macro: "keyword"
  PreCondit: "keyword"
  Type: "class"
  StorageClass: "class"
  Structure: "class"
  Typedef: "class"
  Special: "attribute"
  SpecialComment: "comment"
  Error: "keyword - br"
  Todo: "todo - bi"
  Underlined: "todo . u"
  Cursor: "cursor_fg cursor_bg"

  ColorColumn: "- color_column"
  CursorLineNr: "cursor_line_nr"
  SignColumn: "- sign_column"
  Conceal: "line_grey"
  CursorColumn: "- caret_row"
  CursorLine: "- caret_row"
  Directory: "string"
  DiffAdd: "fg green"
  DiffChange: "yellow - u"
  DiffDelete: "black red"
  DiffText: "black yellow"
  ErrorMsg: "keyword"
  VertSplit: "vert_split"
  Folded: "line_grey"
  FoldColumn: ""
  IncSearch: "- line_grey"
  LineNr: "line_nr"
  NonText: "special_grey"
  Pmenu: "white menu_grey"
  PmenuSel: "black blue"
  PmenuSbar: "- special_grey"
  PmenuThumb: "- white"
  Question: "purple"
  QuickFixLine: "- line_grey"
  Search: "- line_grey"
  SpecialKey: "indent_line"
  SpellBad: "error_red - u"
  SpellCap: "dark_yellow"
  SpellLocal: "dark_yellow"
  SpellRare: "dark_yellow"
  StatusLine: "white cursor_grey"
  StatusLineNC: "line_grey"
  StatusLineTerm: "white cursor_grey"
  StatusLineTermNC: "cursor_grey"
  TabLine: "line_grey"
  TabLineSel: "white"
  TabLineFill: "- tabfill"
  Terminal: "white black"
  Visual: "- visual_grey"
  VisualNOS: "visual_grey"
  WarningMsg: "yellow"
  WildMenu: "black blue"
  EndOfBuffer: "black"


  # -- Start Treesitter --
  # Misc
  TSComment: "comment"
  TSError: "keyword"
  TSPunctDelimiter: "text"
  TSPunctBracket: "text"
  TSPunctSpecial: "text"
  # Constants
  TSConstant: "constant"
  TSConstBuiltin: "constant"
  # Not sure about this guy
  TSConstMacro: "constant"
  TSStringRegex: "regex"
  TSString: "string"
  TSStringEscape: "string_escape"
  TSCharacter: "string"
  TSNumber: "number"
  TSBoolean: "boolean"
  TSFloat: "number"
  TSAnnotation: "annotation"
  TSAttribute: "attribute"
  TSNamespace: "keyword"
  # Functions
  TSFuncBuiltin: "function"
  TSFunction: "function"
  TSFuncMacro: "function"
  TSParameter: "parameter"
  TSParameterReference: "parameter"
  TSMethod: "function"
  TSField: "text"
  TSProperty: "text"
  TSConstructor: "html_tag"
  # Keywords
  TSConditional: "keyword"
  TSRepeat: "keyword"
  TSLabel: "string"
  # Does not work for yield and return they should be diff then class and def
  TSKeyword: "keyword"
  TSKeywordFunction: "function"
  TSKeywordOperator: "operator"
  TSOperator: "operator"
  TSException: "keyword"
  TSType: "class"
  TSTypeBuiltin: "class"
  TSStructure: "#FF00FF"
  TSInclude: "keyword"
  # Variable
  TSVariable: "variable"
  TSVariableBuiltin: "keyword"
  # Text
  TSText: "text"
  TSStrong: "#FFFF00"
  TSEmphasis: "#FFFF00"
  TSUnderline: "#FFFF00"
  TSTitle: "text"
  TSLiteral: "text"
  TSURI: "- - u"
  # Tags
  TSTag: "html_tag"
  TSTagDelimiter: "line_grey"
  TSQueryLinterError: "warning_orange"
  # -- END Treesitter --

  # -- START Languages --
  # Vim - Lua
  vimBracket: "comment"
  vimParenSep: "text"
  luaTable: "attribute"

  # TypeScript
  typescriptTSConstructor: "attribute"
  typescriptTSType: "attribute"
  typescriptTSTypeBuiltin: "constant"
  typescriptTSVariableBuiltin: "constant"

  # Scala
  scalaKeyword: "operator"
  scalaAnnotation: "attribute"

  # HTML (keep consistent with Markdown, below)
  htmlArg: "dark_yellow"
  htmlBold: "dark_yellow - b"
  htmlEndTag: "white"
  htmlH1: "blue"
  htmlH2: "blue"
  htmlH3: "blue"
  htmlH4: "blue"
  htmlH5: "blue"
  htmlH6: "blue"
  htmlItalic: "purple - i"
  htmlLink: "cyan - u"
  htmlSpecialChar: "dark_yellow"
  htmlSpecialTagName: "blue"
  htmlTag: "white"
  htmlTagN: "html_tag"
  htmlTagName: "html_tag"
  htmlTitle: "white"

  # Markdown (keep consistent with HTML, above)
  markdownBlockquote: "line_grey"
  markdownBold: "dark_yellow - b"
  markdownCode: "green"
  markdownCodeBlock: "green"
  markdownCodeDelimiter: "green"
  markdownH1: "blue"
  markdownH2: "blue"
  markdownH3: "blue"
  markdownH4: "blue"
  markdownH5: "blue"
  markdownH6: "blue"
  markdownHeadingDelimiter: "red"
  markdownHeadingRule: "line_grey"
  markdownId: "purple"
  markdownIdDeclaration: "blue"
  markdownIdDelimiter: "purple"
  markdownItalic: "purple - i"
  markdownLinkDelimiter: "purple"
  markdownLinkText: "blue"
  markdownListMarker: "red"
  markdownOrderedListMarker: "red"
  markdownRule: "line_grey"
  markdownUrl: "cyan - u"
  # -- END Languages --

  # YESOD (quasiquotes, hamlet, etc) stuff
  quasiQuote: "operator"
  hmBlock: "special_text"
  hmVar: "text"
  hmKey: "html_tag"

  # -- START CoC --
  CocExplorerIndentLine: "line_grey"
  CocExplorerBufferRoot: "cyan"
  CocExplorerFileRoot: "cyan"
  CocExplorerBufferFullPath: "line_grey"
  CocExplorerFileFullPath: "line_grey"
  CocExplorerBufferReadonly: "purple"
  CocExplorerBufferModified: "purple"
  CocExplorerBufferNameVisible: "orange"
  CocExplorerFileReadonly: "purple"
  CocExplorerFileModified: "purple"
  CocExplorerFileHidden: "line_grey"
  CocExplorerHelpLine: "purple"
  # -- END CoC --

  # -- START Easymotion --
  EasyMotionTarget: "error_red - b"
  EasyMotionTarget2First: "error_red - b"
  EasyMotionTarget2Second: "error_red - b"
  EasyMotionShade: ""
  # EasyMotionIncSearch:
  # EasyMotionMoveHL:

  # -- END Easymotion --

  # -- START Startify --
  StartifyNumber: "light_green"
  StartifySelect: "green"
  StartifyBracket: "blue"
  StartifySpecial: "cyan"
  StartifyVar: "blue"
  StartifyPath: "blue"
  StartifyFile: "cyan"
  StartifySlash: "blue"
  StartifyHeader: "light_blue"
  StartifySection: "purple"
  StartifyFooter: "green"
  # -- END Startify --
  # -- START WhichKey --
  WhichKey: "purple"
  WhichKeySeperator: "green"
  WhichKeyGroup: "vivid_blue"
  WhichKeyDesc: "blue"
  # -- END WhichKey --
  #
  # old stuff
  diffAdded: "green"
  diffRemoved: "red"
  diffFileId: "blue - br"
  diffFile: "special_grey"
  diffNewFile: "green"
  diffOldFile: "red"
  # ToolbarLine: ". darkgray"
  # ToolbarButton: "suvagray - r"
  debugPc: "- cyan"
  debugBreakpoint: "red - r"

  GitSignsAdd: "#587C0C"
  GitSignsChange: "#0C7D9D"
  GitSignsDelete: "#94151B"

  # LspDiagnosticsUnderlineError: "error_red"
  # LspDiagnosticsUnderlineWarning: "orange"
  # LspDiagnosticsUnderlineInformation: "yellow"
  LspDiagnosticsUnderlineHint: "grey_blue"

  LspDiagnosticsSignError: "error_red"
  LspDiagnosticsSignWarning: "warning_orange"
  LspDiagnosticsSignInformation: "info_yellow"
  LspDiagnosticsSignHint: "vivid_blue"

  LspDiagnosticsVirtualTextError: "error_red"
  LspDiagnosticsVirtualTextWarning: "warning_orange"
  LspDiagnosticsVirtualTextInformation: "info_yellow"
  LspDiagnosticsVirtualTextHint: "vivid_blue"


  QuickScopePrimary: "#00C7DF - u"
  QuickScopeSecondary: "#eF5F70 - u"

  MatchWord: "- - u"
  MatchParen: "- - u"
  MatchWordCur: "- - u"
  MatchParenCur: "- - u"

  NvimTreeImageFile: "purple"
  NvimTreeGitDirty: "git_green"
  NvimTreeGitDeleted: "git_green"
  NvimTreeGitStaged: "git_green"
  NvimTreeGitMerge: "git_green"
  NvimTreeGitRenamed: "git_green"
  NvimTreeGitNew: "git_green"
  NvimTreeIndentMarker: "line_grey"
  NvimTreeSymlink: "symlink"
  NvimTreeFolderIcon: "blue"
  NvimTreeRootFolder: "fg - b"
  NvimTreeExecFile: "executable"
  NvimTreeSpecialFile: "info_yellow"

  BufferCurrent: "fg bg"
  BufferCurrentIndex: "blue bg"
  BufferCurrentMod: "fg bg"
  BufferCurrentSign: "blue bg"
  BufferCurrentTarget: "red bg b"

  BufferVisible: "fg bg"
  BufferVisibleIndex: "fg bg"
  BufferVisibleMod: "fg bg"
  BufferVisibleSign: "fg bg"
  BufferVisibleTarget: "red bg b"

  BufferInactive: "gutter_fg_grey bg_inactive"
  BufferInactiveIndex: "gutter_fg_grey bg_inactive"
  BufferInactiveMod: "gutter_fg_grey bg_inactive"
  BufferInactiveSign: "gutter_fg_grey bg_inactive"
  BufferInactiveTarget: "red bg_inactive b"

  # BufferTabpages: "blue bg_inactive b"
  # BufferTabpageFill: "gutter_fg_grey bg_inactive"

  CodiVirtualText: "#6395EC"
  IndentBlanklineContextChar: "indentlinehighlight"


  # terminal: "bg red green yellow blue magenta cyan silver gray red green yellow blue magenta cyan fg"
  # -- Other junk you can define --
  # Debug
  # Ignore
  # Tag
  # Delimiter
  # SpecialChar
  # Cursor", { "fg": s:black, "bg": s:blue }) " the character under the cursor
  # CursorIM", {}) " like Cursor, but used when in IME mode
  # FoldColumn", {}) " 'foldcolumn'
  # CursorLineNr", {}) " Like LineNr when 'cursorline' or 'relativenumber' is set for the cursor line.
  # MoreMsg", {}) " more-prompt
  # ModeMsg", {}) " 'showmode' message (e.g., "-- INSERT --")
  # ErrorMsg: "red - br"
  # WarningMsg: "orange - br"
  # ModeMsg: "yellow - br"
  # MoreMsg: "green - br"
  # Question: "cyan - br"
  # Directory: "blue - b"
